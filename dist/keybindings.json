[
  // The keybindings are based on windows machine, ctrl = cmd, alt = ctrl on MacOS

  /* -------------------------------------------------------------------------- */
  /*                                  EXPLORER                                  */
  /* -------------------------------------------------------------------------- */
  {
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "c",
    "command": "list.collapseAll",
    "when": "filesExplorerFocus && listFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "left",
    "command": "list.collapse",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "key": "right",
    "command": "list.expand",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused && filesExplorerFocus"
  },
  {
    "key": "alt+enter",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "alt+shift+enter",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "alt+r",
    "command": "references-view.next",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "alt+shift+r",
    "command": "references-view.prev",
    "when": "reference-list.hasResult && references-view.canNavigate"
  },
  {
    "key": "shift+tab",
    "command": "editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },

  /* -------------------------------------------------------------------------- */
  /*                                  TERMINAL                                  */
  /* -------------------------------------------------------------------------- */
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },

  /* -------------------------------------------------------------------------- */
  /*                                     GIT                                    */
  /* -------------------------------------------------------------------------- */
  {
    "key": "alt+d",
    "command": "editor.action.dirtydiff.next",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+shift+d",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+shift+n",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+o",
    "command": "git.openFile",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+y",
    "command": "git.checkout"
  },
  {
    "key": "alt+shift+y",
    "command": "git.checkoutDetached"
  },

  /* -------------------------------------------------------------------------- */
  /*                                ALT UTILITIES                               */
  /* -------------------------------------------------------------------------- */
  // {
  //   "key": "alt+enter",
  //   "command": "github.copilot.generate",
  //   "when": "editorTextFocus && github.copilot.activated"
  // },
  {
    "key": "alt+c",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "alt+g",
    "command": "projectManager.listProjects"
  },
  {
    "key": "alt+shift+g",
    "command": "projectManager.listProjectsNewWindow"
  },
  {
    "key": "alt+p",
    "command": "copyRelativeFilePath"
  },
  {
    "key": "alt+z",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  // {
  //   "key": "alt+s",
  //   "command": "gitlens.openWorkingFile"
  // },

  // {
  //   "key": "alt+f3",
  //   "command": "gitlens.diffLineWithPrevious",
  //   "when": "editorTextFocus && !textCompareEditorActive"
  // },

  /* -------------------------------------------------------------------------- */
  /*                               CTRL UTILITIES                               */
  /* -------------------------------------------------------------------------- */
  {
    "key": "ctrl+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus && vim.mode === 'Insert'"
  },
  {
    "key": "ctrl+shift+s",
    "command": "saveAll",
    "when": "editorTextFocus"
  },
  // {
  //   "key": "ctrl+e",
  //   "command": "workbench.action.toggleEditorWidths",
  //   "when": "editorFocus"
  // },

  /* -------------------------------------------------------------------------- */
  /*                          VIM EXTENSION ENHANCEMENT                         */
  /* -------------------------------------------------------------------------- */
  {
    "key": "pagedown",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' || vim.mode == 'VisualLine' || vim.mode == 'Visual'",
    "args": {
      "after": ["<C-d>", "z", "z"]
    }
  },
  {
    "key": "pageup",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal' || vim.mode == 'VisualLine' || vim.mode == 'Visual'",
    "args": {
      "after": ["<C-u>", "z", "z"]
    }
  },

  /* ----- Leader key simulation, need to be in sync with keybindings.json ---- */
  {
    "key": "space space",
    "command": "workbench.action.quickOpen",
    "when": "!editorFocus && !inputFocus && vim.active"
  },
  {
    "key": "escape",
    "command": "workbench.action.closeSidebar",
    "when": "!editorFocus && !panelFocus && sideBarVisible"
  },
  {
    "key": "escape",
    "command": "workbench.action.closePanel",
    "when": "panelFocus"
  },
  {
    "key": "shift+escape",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.closeSidebar",
        "workbench.action.closePanel"
      ]
    }
  },
  {
    "key": "space e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "!editorFocus && !inputFocus && vim.active"
  },
  {
    "key": "space g",
    "command": "workbench.view.scm",
    "when": "!editorFocus && !inputFocus && vim.active"
  },
  // {
  //   "key": "alt+shift+c",
  //   "command": "gitlens.views.commits.focus"
  // },
  {
    "key": "space /",
    "command": "workbench.action.quickTextSearch",
    "when": "!editorFocus && !inputFocus && vim.active"
  },
  {
    "key": "space f",
    "command": "workbench.action.findInFiles",
    "when": "!editorFocus && !inputFocus && vim.active"
  },
  {
    "key": "space r",
    "command": "workbench.action.replaceInFiles",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "space t",
    "command": "todo-tree-view.focus",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "space c",
    "command": "workbench.panel.chat.view.edits.focus",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "space x",
    "command": "workbench.view.extensions",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "space d",
    "command": "workbench.view.debug",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "space p",
    "command": "workbench.action.focusPanel",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "space l",
    "command": "workbench.action.showCommands",
    "when": "!editorfocus && !inputFocus && vim.active"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },

  {
    "key": "alt+o",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack && !textCompareEditorActive"
  },
  {
    "key": "alt+i",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+m",
    "command": "workbench.action.focusLeftGroup",
    "when": "vim.mode === 'Normal'"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.focusBelowGroup",
    "when": "vim.mode === 'Normal'"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.focusAboveGroup",
    "when": "vim.mode === 'Normal'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.action.focusRightGroup",
    "when": "vim.mode === 'Normal'"
  },
  {
    "key": "/",
    "command": "list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "alt+shift+p",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned "
  },
  {
    "key": "alt+shift+p",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned "
  },
  /* -------------------------------------------------------------------------- */
  /*                                    TABS                                    */
  /* -------------------------------------------------------------------------- */
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup",
    "when": "!terminalFocus"
  },
  // {
  //   "key": "ctrl+shift+m",
  //   "command": "workbench.action.moveEditorLeftInGroup"
  // },
  // {
  //   "key": "ctrl+shift+i",
  //   "command": "workbench.action.moveEditorRightInGroup"
  // },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.closeEditorsToTheRight"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },

  /* -------------------------------------------------------------------------- */
  /*                            AVOID ZOOM MISCLICKS                            */
  /* -------------------------------------------------------------------------- */
  {
    "key": "ctrl+="
  },
  {
    "key": "ctrl+-"
  },

  /* -------------------------------------------------------------------------- */
  /*                                FUNCTION_KEYS                               */
  /* -------------------------------------------------------------------------- */
  {
    "key": "f5",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "f12",
    "command": "workbench.action.toggleDevTools"
  }
  // {
  //   "key": "f2",
  //   "command": "workbench.action.debug.disconnect",
  //   "when": "focusedSessionIsAttach && inDebugMode"
  // },
  // {
  //   "key": "f5",
  //   "command": "workbench.action.debug.start",
  //   "when": "debuggersAvailable && debugState == 'inactive'"
  // },
]
